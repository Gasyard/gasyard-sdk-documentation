openapi: "3.0.0"
info:
  title: Gasyard SDK API
  version: 1.0.0
  description: API documentation for Gasyard Bridge SDK

servers:
  - url: https://api.gasyard.fi
    description: Production server

  - url: http://localhost:3000
    description: Local server

tags:
  - name: SDK V2
    description: Enhanced Endpoints related to bridging assets using the Gasyard SDK

  - name: SDK
    description: Endpoints related to bridging assets using the Gasyard SDK

paths:
  /api/sdk/v2/config:
    get:
      tags:
        - SDK V2
      summary: Config
      description: Get config data for bridge tokens
      parameters:
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for authentication
        - in: query
          name: chainID
          required: false
          schema:
            type: integer
            enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
            default: null
          description: |
            Network ID of the source chain. Options:
            Available options:
              - 1: Ethereum
              - 2: Base
              - 3: BNB
              - 4: Arbitrum
              - 5: HyperLiquid
              - 6: Movement
              - 7: Solana
              - 8: Bera
              - 9: Sei
              - 10: Polygon
      responses:
        "200":
          description: Successful bridge request
          content:
            application/json:
              schema:
                type: object
                example:
                  networkName: Ethereum,
                  networkChainID: 1,
                  chainID: 1,
                  baseToken: ETH,
                  decimals: 18,
                  gatewayContract: 0x6a2A5B7D0434CC5b77e304bc9D68C20Dee805,
                  logoURL: https://api.gasyard.fi/uploads/eth-network.png,
                  supportedAddress:
                    {
                      NATIVE: 0x0000000000000000000000000000000000000000,
                      USDC: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48,
                      USDT: 0xdAC17F958D2ee523a2206206994597C13D831ec7,
                    }
        "400":
          description: Bad request (missing or invalid parameters)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: error message
        "401":
          description: Unauthorized (invalid API key)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized Access
        "500":
          description: Internal server error

  /api/sdk/v2/quote:
    get:
      tags:
        - SDK V2
      summary: Quote
      description: Get quote data for bridge tokens
      parameters:
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for authentication

        - in: query
          name: inputNetwork
          required: true
          schema:
            type: integer
            enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          description: |
            Network ID of the source chain. Options:
            Available options:
              - 1: Ethereum
              - 2: Base
              - 3: BNB
              - 4: Arbitrum
              - 5: HyperLiquid
              - 6: Movement
              - 7: Solana
              - 8: Bera
              - 9: Sei
              - 10: Polygon

        - in: query
          name: outputNetwork
          required: true
          schema:
            type: integer
            enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          description: Network ID of the source chain

        - in: query
          name: inputTokenContract
          required: false
          schema:
            type: string
          description: Token Contract of ouptut chain

        - in: query
          name: outputTokenContract
          required: false
          schema:
            type: string
          description: Token Contract of input chain

        - in: query
          name: inputTokenAmount
          required: true
          schema:
            type: number
          description: Amount of tokens to bridge (in wei)

        - in: query
          name: sourceAddress
          required: true
          schema:
            type: string
          description: Address of Sender

        - in: query
          name: destinationAddress
          required: true
          schema:
            type: string
          description: Address of receiever

        - in: query
          name: slippage
          required: false
          schema:
            type: number
          description: Slippage for quote in BPS - default is 5

        - in: query
          name: showBridgeData
          required: false
          schema:
            type: boolean
          description: Flag to get bridge data - default is True

      responses:
        "200":
          description: Successful bridge request
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  "inputTokenAmount": 20000000,
                  "outputTokenAmount": 19996368.823009696,
                  "outputTokenAmountRaw": 19.996368823009696,
                  "outputValueInUSD": 19.99419021862643,
                  "feesInToken": 612540396699,
                  "feesInUSD": 0.002630781373570634,
                  "rewardPoints": 0,
                  "priceImpact": -0.018155884951531753,
                  "minimumOutput": 19906385.163306154,
                  "transaction":
                    [
                      {
                        "to": "0xaf88d065e77c8cC2239327C5EDb3A432268e5831",
                        "data": "0x095ea7b30000000000000000000000006a2a5b7d0434cc5b77e304bc9d68c20dee8051520000000000000000000000000000000000000000000000000000000001312d00",
                      },
                      {
                        "data": "0xae127b6a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e58310000000000000000000000000000000000000000000000000000000001312d00000000000000000000000000f11b27bab53ae31d8e4132e4561bbef0a4cd93a0000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda0291300000000000000000000000000000000000000000000000000000000012fbf510000000000000000000000000000000000000000000000000000000068a45878000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000177b22706172746e65724944223a22666c6970706572227d000000000000000000",
                        "to": "0x6a2A5B7D0434CC5b77e304bc9D68C20Dee805152",
                      },
                    ]
        "400":
          description: Bad request (missing or invalid parameters)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: error message
        "401":
          description: Unauthorized (invalid API key)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized Access
        "500":
          description: Internal server error

  /api/sdk/v2/status:
    get:
      tags:
        - SDK V2
      summary: Order Status
      description: Get Order Status
      parameters:
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for authentication
        - in: query
          name: sourceHash
          required: true
          schema:
            type: string
          description: Input Hash

      responses:
        "200":
          description: Successful Transaction status
          content:
            application/json:
              schema:
                type: object
                example:
                  inputTxHash: 0x394441fa2d50e45c9c83958a0966275a7928dda103c1d5419f76c7d627b8014e,
                  outputTxHash: 0x3a855fe47483948810e997e88cbc587c2b79f0513dd9d4686f12bae4aa50d70f,
                  managerHash: 0xfb7cf8c2d635a3363aa3a07937d0fba6dc8598f9359284fc11d590bb0ef7be1b,
                  outputChainAmount: 13566687,
                  collateral: 13.633588,
                  minimumOutput: null,
                  status: success,
                  solver: 0x0000000000000000000000008263d2e25b25478c93c541fccfc85ea2665b2193,
                  refundHash: null,
                  unlockHash: null,
                  fillTime: null,
                  inputChainID: 2,
                  outputChainID: 5,
                  inputToken: 0x0000000000000000000000000000000000000000000000000000000000000000,
                  outputToken: 0x000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831,
                  inputChainAmount: 5000000000000000,
                  inputAddress: 0x00000000000000000000000042af247f6f067acbc5952605844efb8d90150c08,
                  outputAddress: 0x00000000000000000000000042af247f6f067acbc5952605844efb8d90150c08,
                  orderID: 0xd6d158f4f2413a868dcb74828b610fcf73b6baa42b5d95c9d68aacda71b24382,
        "400":
          description: Bad request (missing or invalid parameters)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: error message
        "401":
          description: Unauthorized (invalid API key)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized Access
        "500":
          description: Internal server error

  /api/sdk/config:
    get:
      tags:
        - SDK
      summary: Config
      description: Get config data for bridge tokens
      parameters:
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for authentication
        - in: query
          name: chainID
          required: false
          schema:
            type: integer
            enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
            default: null
          description: |
            Network ID of the source chain. Options:
            Available options:
              - 1: Ethereum
              - 2: Base
              - 3: BNB
              - 4: Arbitrum
              - 5: HyperLiquid
              - 6: Movement
              - 7: Solana
              - 8: Bera
              - 9: Sei
              - 10: Polygon
      responses:
        "200":
          description: Successful bridge request
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Bad request (missing or invalid parameters)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: error message
        "401":
          description: Unauthorized (invalid API key)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized Access
        "500":
          description: Internal server error

  /api/sdk/quote:
    get:
      tags:
        - SDK
      summary: Get quote
      description: Get quote data for bridge tokens
      parameters:
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for authentication
        - in: query
          name: outputNetwork
          required: true
          schema:
            type: integer
            enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          description: |
            Network ID of the source chain. Options:
            Available options:
              - 1: Ethereum
              - 2: Base
              - 3: BNB
              - 4: Arbitrum
              - 5: HyperLiquid
              - 6: Movement
              - 7: Solana
              - 8: Bera
              - 9: Sei
              - 10: Polygon

        - in: query
          name: inputNetwork
          required: true
          schema:
            type: integer
            enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          description: Network ID of the source chain

        - in: query
          name: outputTokenContract
          required: false
          schema:
            type: string
          description: Token Contract of ouptut chain

        - in: query
          name: inputTokenContract
          required: false
          schema:
            type: string
          description: Token Contract of input chain

        - in: query
          name: inputTokenAmount
          required: true
          schema:
            type: number
          description: Amount of tokens to bridge (in wei)

      responses:
        "200":
          description: Successful bridge request
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  inputTokenAmount: 123
                  outputTokenAmount: 123
                  outputValueInUSD: 12.34
                  feesInToken: 123
                  feesInUSD: 0.123
                  rewardPoints: 1.23
        "400":
          description: Bad request (missing or invalid parameters)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: error message
        "401":
          description: Unauthorized (invalid API key)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized Access
        "500":
          description: Internal server error

  /api/sdk/bridge:
    get:
      tags:
        - SDK
      summary: Initiate bridge data
      description: Bridges tokens from source to destination chain using SDK.
      parameters:
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for authentication

        - in: query
          name: sourceNetwork
          required: true
          schema:
            type: integer
            enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          description: |
            Network ID of the source chain. Options:
            Available options:
              - 1: Ethereum
              - 2: Base
              - 3: BNB
              - 4: Arbitrum
              - 5: HyperLiquid
              - 6: Movement
              - 7: Solana
              - 8: Bera
              - 9: Sei
              - 10: Polygon

        - in: query
          name: destinationNetwork
          required: true
          schema:
            type: integer
            enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          description: Network ID of the destination chain

        - in: query
          name: tokenOutAddress
          required: true
          schema:
            type: string
          description: Token address on the destination chain

        - in: query
          name: destinationAddress
          required: true
          schema:
            type: string
          description: User wallet address on the destination chain

        - in: query
          name: tokenInAddress
          required: true
          schema:
            type: string
          description: Token address on the source chain

        - in: query
          name: sourceTokenAmount
          required: true
          schema:
            type: string
          description: Amount of tokens to bridge (in wei)

        - in: query
          name: sourceAddress
          required: true
          schema:
            type: string
          description: User wallet address on the source chain

      responses:
        "200":
          description: Successful bridge request
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  transaction:
                    data: "0x123..."
                    to: "0x123.."
        "400":
          description: Bad request (missing or invalid parameters)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: error message
        "401":
          description: Unauthorized (invalid API key)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized Access
        "500":
          description: Internal server error

  /api/sdk/balance:
    get:
      tags:
        - SDK
      summary: Get balance
      description: Get portfolio balance for user Address
      parameters:
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for authentication
        - in: query
          name: userAddress
          required: true
          schema:
            type: string
          description: "address of user "

      responses:
        "200":
          description: Successful bridge request
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  walletAssets: AssetBalance
        "400":
          description: Bad request (missing or invalid parameters)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: error message
        "401":
          description: Unauthorized (invalid API key)
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized Access
        "500":
          description: Internal server error
